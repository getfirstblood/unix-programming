1、c++中list对象的学习
2、快速排序
3、数据库操作（系统级、表操作）、视图
4、数据结构后部分复习

循环链表结点最长问题
全排列
数据库:数据库中没有全称量词，需要转换为存在量词;没有蕴涵逻辑运算，需要将p->q 转换为 ～p V q
有三个表：（S、C、SC）
问题：1、选修了全部课程的学生号
2、至少选修了0999学生所选课程的学生号
1、(∀x)p  === ~(Ex(~p))
2、(∀x)p->q === ～（Ex~(p->q)） === ~(Ex~(~pVq)) === ~(Ex(p且～q))
模拟工厂模式
图的最短路径

哈夫曼树

KMP算法如何确定next【】数组的？？

图的存储结构 ，最短路径算法
二叉排序树的删除、平衡二叉树、
二叉树的前序非递归实现

volatitile
　1）. 并行设备的硬件寄存器（如：状态寄存器）
　2）. 一个中断服务子程序中会访问到的非自动变量（Non-automatic variables)
　3）. 多线程应用中被几个任务共享的变量

operator const char *() const
如果是重载*的话，那应该写成：const char operator * () const而不是楼主所写的那样，而且即使是这样写那也不正确的，因为运算符重载中有几个运算符的返回值是有格式的（约定），如operator * 在重载时通常返回值是classType&或者const classType& 。
operator const char*() const是类型转换函数的定义，即该类型可以自动转换为const char*类型。至于最后一个const，那个大家都知道是对类成员的限制（不允许更改对象的状态）
虽然我不知道你的类是什么，但是我可以给你举一个简单的例子说明一下问题。比如我们现在自定一个一个整型（MyInt），它允许在需要使用C++语言中的int类型时将MyInt类型转换为int类型：
class MyInt {
     public:
          operator int () const;
     private:
          int elem;
};
MyInt::operator int () const
{
    return elem;
}
就可以在需要使用int类型时使用MyInt。
还有你需要记住，C++中没有返回类型的函数有3个，构造函数、析构函数、类型转换函数。前两个是不写返回类型函数实现中也不允许出现return语句（所以不同于void)，
最后一个则是不写返回类型，但是必须返回对应类型的值，即必须出现return语句。

malloc,free和new,delete有区别吗？如果有，是什么？
1,malloc与free是C++/C语言的标准库函数，new/delete是C++的运算符。它们都可用于申请动态内存和释放内存。
2, 对于非内部数据类型的对象而言，光用maloc/free无法满足动态对象的要求。对象在创建的同时要自动执行构造函数，对象在消亡之前要自动执行析构函数。由于malloc/free是库函数而不是运算符，不在编译器控制权限之内，不能够把执行构造函数和析构函数的任务强加于malloc/free。
3,因此C++语言需要一个能完成动态内存分配和初始化工作的运算符new，以一个能完成清理与释放内存工作的运算符delete。注意new/delete不是库函数。
4,C++程序经常要调用C函数，而C程序只能用malloc/free管理动态内存